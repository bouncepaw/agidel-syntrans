* TODO Quotified code → ready-to-eval scheme code [prepare syntrans]
  Every plugin provides alist _agidel-arities ((cons function-name
  arities)…). Each arity is a list of symbol {q e}, where q means that
  an arg has to be quoted, and e means that the arg has to be evaled. 

  Quoted args shall be quoted, evaled args should be transformed to
  function invocations or valid scheme data types or kinda like that
  idk. Like that:

  #+BEGIN_SRC scheme
  ; so a plugin provides such alist:
  test-plugin/_agidel-arities
  > ((foo q e) (bar e e))
  ; and there is code like that:
  (bar "test" (foo (elt elt elt) "test"))
  ; after evaluation it becomes:
  (test-plugin/bar "test" (test-plugin/foo '(elt elt elt) "test"))
  #+END_SRC
* TODO Ready-to-eval scheme code → final code [aeval syntrans]
  Afterwards the code above has to be evaluated. Chicken can do it by
  itself, this syntrans is meant to wrap it into syntrans interface.
